{"version":3,"sources":["components/Items/Items.tsx","components/Pagination/Pagination.tsx","Pages/ItemsPage.tsx","utils.ts","App.tsx","index.tsx"],"names":["Items","items","map","item","Pagination","itemsPerPage","totalItems","paginate","currentPage","setCurrentPage","pageNumbers","pages","Math","ceil","i","push","firstPage","lastPage","length","className","classNames","disabled","href","onClick","number","active","from","to","numbers","n","getNumbers","ItemsPage","useSearchParams","searchParams","setSearchParams","get","updateSearch","params","Object","entries","forEach","key","value","delete","set","newCurrentPage","page","lastItemIndex","firstItemIndex","currentItem","slice","total","id","onChange","newItemsPerPage","target","perPage","defaultValue","num","htmlFor","pageNumber","App","path","index","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a32a424.chunk.js","sourcesContent":["type PropTypes = {\n  items: string[];\n};\n\nexport const Items: React.FC<PropTypes> = ({ items }) => {\n  return (\n    <ul>\n      {items.map(item => (\n        <li data-cy=\"item\" key={item}>{item}</li>\n      ))}\n    </ul>\n  );\n};\n","import classNames from 'classnames';\n\ntype PropTypes = {\n  totalItems: number;\n  itemsPerPage: number;\n  currentPage: number;\n  paginate: (pageNumber: number) => void;\n  setCurrentPage: (newPage: number) => void;\n};\n\nexport const Pagination: React.FC<PropTypes> = ({\n  itemsPerPage,\n  totalItems,\n  paginate,\n  currentPage,\n  setCurrentPage,\n}) => {\n  const pageNumbers = [];\n  const pages = Math.ceil(totalItems / itemsPerPage);\n\n  // eslint-disable-next-line no-plusplus\n  for (let i = 1; i <= pages; i++) {\n    pageNumbers.push(i);\n  }\n\n  const firstPage = pageNumbers[0];\n  const lastPage = pageNumbers[pageNumbers.length - 1];\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === firstPage },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          onClick={() => {\n            setCurrentPage(currentPage - 1);\n          }}\n          aria-disabled={currentPage === firstPage}\n        >\n          «\n        </a>\n      </li>\n      {\n        pageNumbers.map(number => (\n          <li\n            className={classNames(\n              'page-item',\n              { active: currentPage === number },\n            )}\n            key={number}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href=\"#2\"\n              onClick={() => paginate(number)}\n            >\n              {number}\n            </a>\n          </li>\n        ))\n      }\n      <li className={classNames(\n        'page-item',\n        { disabled: currentPage === pageNumbers[pageNumbers.length - 1] },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          onClick={() => {\n            setCurrentPage(currentPage + 1);\n          }}\n          aria-disabled={currentPage === lastPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Items } from '../components/Items';\nimport { getNumbers } from '../utils';\nimport { Pagination } from '../components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const ItemsPage: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const DEFAULT_PAGE = 1;\n  const DEFAULT_ITEMS_PER_PAGE = 5;\n\n  const currentPage = +(searchParams.get('page') || DEFAULT_PAGE);\n  const itemsPerPage = +(searchParams.get('perPage') || DEFAULT_ITEMS_PER_PAGE);\n\n  function updateSearch(params: { [key: string]: string | null }) {\n    Object.entries(params).forEach(([key, value]) => {\n      if (value === null) {\n        searchParams.delete(key);\n      } else {\n        searchParams.set(key, value);\n      }\n    });\n\n    setSearchParams(searchParams);\n  }\n\n  const setCurrentPage = (newCurrentPage: number) => {\n    updateSearch({ page: `${newCurrentPage}` });\n  };\n\n  const setItemsPerPage = (newItemsPerPage: number) => {\n    updateSearch({\n      page: '1',\n      perPage: `${newItemsPerPage}`,\n    });\n  };\n\n  const lastItemIndex = currentPage * itemsPerPage;\n  const firstItemIndex = lastItemIndex - itemsPerPage;\n  const currentItem = items.slice(firstItemIndex, lastItemIndex);\n  const total = items.length;\n\n  const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemIndex + 1} - ${lastItemIndex} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={({ target }) => {\n              setItemsPerPage(+target.value);\n            }}\n            defaultValue={itemsPerPage}\n          >\n            {[3, 5, 10, 20].map(num => (\n              <option value={num} key={num}>{num}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Items items={currentItem} />\n      <Pagination\n        totalItems={total}\n        setCurrentPage={setCurrentPage}\n        currentPage={currentPage}\n        itemsPerPage={itemsPerPage}\n        paginate={paginate}\n      />\n    </div>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport { ItemsPage } from './Pages';\n\nexport const App = () => (\n  <Routes>\n    <Route path=\"/\">\n      <Route index element={<ItemsPage />} />\n    </Route>\n  </Routes>\n);\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}